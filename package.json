{
  "name": "cds-ts-samples",
  "version": "1.0.0",
  "description": "A simple CAP project.",
  "repository": "<Add your repository here>",
  "license": "UNLICENSED",
  "private": true,
  "scripts": {
    "start": "cds-serve",
    "watch": "cds-ts w",
    "eslint:message": "echo 'ESLint started ...'",
    "eslint": "eslint .",
    "eslint:fix": "eslint . --fix",
    "prettier:message": "echo 'Prettier started ...'",
    "prettier": "prettier . --check",
    "prettier:fix": "prettier . --write",
    "format-cds:message": "echo 'Format-cds started ...'",
    "format-cds": "format-cds",
    "check": "run-s eslint:message eslint prettier:message prettier",
    "fix": "run-s eslint:message eslint:fix prettier:message prettier:fix format-cds:message format-cds",
    "build:cds": "cds build --production",
    "build:cds:message": "echo 'Build CDS ...'",
    "build:ts": "tsc",
    "build:ts:message": "echo 'Transpile TS => JS ...'",
    "build:srv:clean:ts": "rimraf --glob 'gen/srv/srv/**/*.ts'",
    "build:srv:clean:ts:message": "echo 'Clean TS files from srv folder ...'",
    "build": "run-s build:cds:message build:cds build:ts:message build:ts build:srv:clean:ts:message build:srv:clean:ts"
  },
  "dependencies": {
    "@dxfrontier/cds-ts-dispatcher": "^5",
    "@dxfrontier/cds-ts-repository": "^6",
    "@sap/cds": "^9"
  },
  "devDependencies": {
    "eslint": "^9.33.0",
    "npm-run-all": "^4.1.5",
    "prettier": "3.6.2",
    "rimraf": "^6.0.1",
    "typescript-eslint": "^8.40.0",
    "@cap-js/cds-typer": ">=0.36.0",
    "@cap-js/cds-types": "^0.13.0",
    "@cap-js/sqlite": "^2.0.2",
    "@types/node": "^24.3.0",
    "tsx": "^4",
    "typescript": "^5.9.2"
  },
  "imports": {
    "#cds-models/*": "./@cds-models/*/index.js",
    "#dispatcher": "./@dispatcher/index.js"
  },
  "cds": {
    "requires": {
      "messaging": {
        "kind": "file-based-messaging"
      },
      "db": {
        "kind": "sql"
      },
      "auth": {
        "kind": "basic",
        "users": {
          "manager": {
            "roles": [
              "Manager"
            ]
          },
          "user": {
            "roles": [
              "User"
            ]
          }
        }
      }
    }
  }
}
